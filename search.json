[{"path":"https://yjunechoe.github.io/jlme/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 jlme authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yjunechoe.github.io/jlme/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"June Choe. Author, maintainer.","code":""},{"path":"https://yjunechoe.github.io/jlme/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choe J (2024). jlme: Regression Modelling 'GLM.jl' 'MixedModels.jl' 'Julia'. R package version 0.1.0, https://yjunechoe.github.io/jlme/.","code":"@Manual{,   title = {jlme: Regression Modelling with 'GLM.jl' and 'MixedModels.jl' in 'Julia'},   author = {June Choe},   year = {2024},   note = {R package version 0.1.0},   url = {https://yjunechoe.github.io/jlme/}, }"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"jlme","dir":"","previous_headings":"","what":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"Julia (mixed-effects) regression modelling R","code":""},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"can install development version jlme GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"yjunechoe/jlme\")"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"jlme uses {JuliaConnectoR} connect Julia session. See JuliaConnectoR package documentation troubleshooting related Julia installation configuration.","code":"library(jlme) jlme_setup()"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"using-jlme","dir":"","previous_headings":"","what":"Using {jlme}","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"set , (g)lm() (g)lmer complements Julia available via jlm() jlmer(), respectively.","code":""},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"fixed-effects-models","dir":"","previous_headings":"Using {jlme}","what":"Fixed effects models","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"jlm() lm()/glm() syntax: Contrasts factor columns preserved:","code":"# lm(mpg ~ hp, mtcars) jlm(mpg ~ hp, mtcars) #> <Julia object of type StatsModels.TableRegressionModel> #>  #> mpg ~ 1 + hp #>  #> ──────────────────────────────────────────────────────────────────────────── #>                   Coef.  Std. Error      z  Pr(>|z|)   Lower 95%   Upper 95% #> ──────────────────────────────────────────────────────────────────────────── #> (Intercept)  30.0989      1.63392    18.42    <1e-75  26.8964     33.3013 #> hp           -0.0682283   0.0101193  -6.74    <1e-10  -0.0880617  -0.0483948 #> ──────────────────────────────────────────────────────────────────────────── x <- mtcars  x$am_sum <- factor(x$am) contrasts(x$am_sum) <- contr.sum(2)  x$cyl_helm <- factor(x$cyl) contrasts(x$cyl_helm) <- contr.helmert(3) colnames(contrasts(x$cyl_helm)) <- c(\"4vs6\", \"4&6vs8\")  jlm(mpg ~ am_sum + cyl_helm, x) #> <Julia object of type StatsModels.TableRegressionModel> #>  #> mpg ~ 1 + am_sum + cyl_helm #>  #> ─────────────────────────────────────────────────────────────────────────────── #>                      Coef.  Std. Error      z  Pr(>|z|)  Lower 95%    Upper 95% #> ─────────────────────────────────────────────────────────────────────────────── #> (Intercept)       20.6739     0.572633  36.10    <1e-99   19.5516   21.7963 #> am_sum: 1         -1.27998    0.648789  -1.97    0.0485   -2.55158  -0.00837293 #> cyl_helm: 4vs6    -3.07806    0.767861  -4.01    <1e-04   -4.58304  -1.57308 #> cyl_helm: 4&6vs8  -2.32983    0.414392  -5.62    <1e-07   -3.14203  -1.51764 #> ───────────────────────────────────────────────────────────────────────────────"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"mixed-effects-models","dir":"","previous_headings":"Using {jlme}","what":"Mixed effects models","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"jlmer() lmer()/glmer() syntax:","code":"data(\"sleepstudy\", package = \"lme4\") # lme4::lmer(Reaction ~ Days + (Days | Subject), sleepstudy) jlmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = TRUE) #> <Julia object of type LinearMixedModel> #>  #> Reaction ~ 1 + Days + (1 + Days | Subject) #>  #> Variance components: #>             Column    Variance Std.Dev.   Corr. #> Subject  (Intercept)  612.10016 24.74066 #>          Days          35.07171  5.92214 +0.07 #> Residual              654.94001 25.59180 #> ────────────────────────────────────────────────── #>                 Coef.  Std. Error      z  Pr(>|z|) #> ────────────────────────────────────────────────── #> (Intercept)  251.405      6.8246   36.84    <1e-99 #> Days          10.4673     1.54579   6.77    <1e-10 #> ────────────────────────────────────────────────── data(\"VerbAgg\", package = \"lme4\") # lme4::glmer(r2 ~ Anger + Gender + (1 | id), VerbAgg, family = \"binomial\") jlmer(r2 ~ Anger + Gender + (1 | id), VerbAgg, family = \"binomial\") #> <Julia object of type GeneralizedLinearMixedModel> #>  #> r2 ~ 1 + Anger + Gender + (1 | id) #>  #> Variance components: #>       Column   VarianceStd.Dev. #> id (Intercept)  1.12074 1.05865 #> ──────────────────────────────────────────────────── #>                   Coef.  Std. Error      z  Pr(>|z|) #> ──────────────────────────────────────────────────── #> (Intercept)  -1.10115     0.280681   -3.92    <1e-04 #> Anger         0.0462741   0.0134906   3.43    0.0006 #> Gender: M     0.260057    0.153847    1.69    0.0910 #> ────────────────────────────────────────────────────"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"inspect-model-objects","dir":"","previous_headings":"Using {jlme}","what":"Inspect model objects","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"broom-style tidy() glance() methods Julia regression models:","code":"jmod <- jlmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = TRUE)  tidy(jmod) #>      effect    group                  term     estimate std.error statistic #> 1     fixed     <NA>           (Intercept) 251.40510485  6.824597 36.838090 #> 2     fixed     <NA>                  Days  10.46728596  1.545790  6.771481 #> 12 ran_pars  Subject       sd__(Intercept)  24.74065797        NA        NA #> 3  ran_pars  Subject cor__(Intercept).Days   0.06555124        NA        NA #> 21 ran_pars  Subject              sd__Days   5.92213766        NA        NA #> 11 ran_pars Residual       sd__Observation  25.59179572        NA        NA #>          p.value #> 1  4.537101e-297 #> 2   1.274703e-11 #> 12            NA #> 3             NA #> 21            NA #> 11            NA glance(jmod) #>   nobs df   sigma logLik AIC BIC deviance df.residual #> 1  180  6 25.5918     NA  NA  NA 1743.628         174"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"advanced-features-with-juliaconnector","dir":"","previous_headings":"","what":"Advanced features with {JuliaConnectoR}","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"","code":"library(JuliaConnectoR)"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"inspect-model-objects-1","dir":"","previous_headings":"Advanced features with {JuliaConnectoR}","what":"Inspect model objects","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"","code":"# List all properties of a MixedModel object # - Properties are accessible via `$` juliaCall(\"propertynames\", jmod) #> <Julia object of type NTuple{36, Symbol}> #> (:formula, :reterms, :Xymat, :feterm, :sqrtwts, :parmap, :dims, :A, :L, :optsum, :θ, :theta, :β, :beta, :βs, :betas, :λ, :lambda, :stderror, :σ, :sigma, :σs, :sigmas, :σρs, :sigmarhos, :b, :u, :lowerbd, :X, :y, :corr, :vcov, :PCA, :rePCA, :objective, :pvalues) # Example 1: PCA of random effects jmod$rePCA #> <Julia object of type @NamedTuple{Subject::Vector{Float64}}> #> (Subject = [0.5327756193675971, 1.0],) # Collect as an R object (NamedTuple -> named list) juliaGet(jmod$rePCA) #> $Subject #> [1] 0.5327756 1.0000000 #>  #> attr(,\"JLTYPE\") #> [1] \"@NamedTuple{Subject::Vector{Float64}}\""},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"create-bindings-to-julia-libs-to-access-more-features","dir":"","previous_headings":"Advanced features with {JuliaConnectoR}","what":"Create bindings to Julia libs to access more features","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"following lists Julia packages loaded via jlme_setup() Use Julia(-esque) syntax R: Use MixedModels.jl features, like parametric bootstrapping robust confidence intervals: See MixedModels.jl documentation features.","code":"juliaCall(\"Pkg.status\") #> Status `C:\\Users\\jchoe\\AppData\\Local\\Temp\\jl_nOy1Jx\\Project.toml` #>   [38e38edf] GLM v1.9.0 #>   [98e50ef6] JuliaFormatter v1.0.56 #>   [ff71e718] MixedModels v4.24.1 #>   [3eaba693] StatsModels v0.7.3 MixedModels <- juliaImport(\"MixedModels\")  # Check singular fit MixedModels$issingular(jmod) #> [1] FALSE # Long-form construction of `jmod` jmod2 <- MixedModels$fit(   MixedModels$LinearMixedModel,   juliaEval(\"@formula(Reaction ~ Days + (Days | Subject))\"),   juliaPut(sleepstudy) )  # This time in complete Julia syntax jmod3 <- juliaEval(\"   fit(     LinearMixedModel,     @formula(reaction ~ days + (days | subj)),     MixedModels.dataset(:sleepstudy)   ) \") Random <- juliaImport(\"Random\") samp <- MixedModels$parametricbootstrap(   Random$MersenneTwister(42L), # RNG   1000L, # Number of simulations   jmod # Model ) samp #> <Julia object of type MixedModelBootstrap{Float64}> #> MixedModelBootstrap with 1000 samples #>      parameter  min        q25        median     mean       q75        max #>    ┌─────────────────────────────────────────────────────────────────────────── #>  1 │ β1         227.464    246.884    251.608    251.655    256.229    275.687 #>  2 │ β2         4.99683    9.40303    10.4795    10.4522    11.5543    15.2264 #>  3 │ σ          21.0632    24.5771    25.5826    25.6026    26.5582    30.8172 #>  4 │ σ1         3.88389    19.8497    23.9491    23.8174    27.9866    40.7803 #>  5 │ σ2         1.64965    4.94085    5.77341    5.78678    6.61699    9.78917 #>  6 │ ρ1         -0.792183  -0.150541  0.0909067  0.111872   0.345471   1.0 #>  7 │ θ1         0.158103   0.762458   0.939804   0.935417   1.10267    1.72974 #>  8 │ θ2         -0.258896  -0.03553   0.0185695  0.0198342  0.0741567  0.333454 #>  9 │ θ3         0.0        0.17498    0.213472   0.207328   0.247253   0.402298"},{"path":"https://yjunechoe.github.io/jlme/index.html","id":"tips","dir":"","previous_headings":"","what":"Tips","title":"Regression Modelling with GLM.jl and MixedModels.jl in Julia","text":"practice, overhead comes transferring data R Julia. looking fit many models data, can use jl_data() send data Julia first use fit models. data custom contrasts, can use jl_contrasts() also convert Julia first passing model.","code":"data_r <- mtcars  # Extra tip: keep only columns you need data_julia <- jl_data(data_r[, c(\"mpg\", \"am\")])  jlm(mpg ~ am, data_julia) #> <Julia object of type StatsModels.TableRegressionModel> #>  #> mpg ~ 1 + am #>  #> ──────────────────────────────────────────────────────────────────────── #>                 Coef.  Std. Error      z  Pr(>|z|)  Lower 95%  Upper 95% #> ──────────────────────────────────────────────────────────────────────── #> (Intercept)  17.1474      1.1246   15.25    <1e-51   14.9432     19.3515 #> am            7.24494     1.76442   4.11    <1e-04    3.78674    10.7031 #> ──────────────────────────────────────────────────────────────────────── data_r$am <- as.factor(data_r$am) contrasts(data_r$am) <- contr.sum(2)  data_julia <- jl_data(data_r[, c(\"mpg\", \"am\")]) contrasts_julia <- jl_contrasts(data_r)  jlm(mpg ~ am, data_julia, contrasts = contrasts_julia) #> <Julia object of type StatsModels.TableRegressionModel> #>  #> mpg ~ 1 + am #>  #> ──────────────────────────────────────────────────────────────────────── #>                 Coef.  Std. Error      z  Pr(>|z|)  Lower 95%  Upper 95% #> ──────────────────────────────────────────────────────────────────────── #> (Intercept)  20.7698     0.882211  23.54    <1e-99   19.0407    22.4989 #> am: 1        -3.62247    0.882211  -4.11    <1e-04   -5.35157   -1.89337 #> ────────────────────────────────────────────────────────────────────────"},{"path":"https://yjunechoe.github.io/jlme/reference/jl-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for converting model specifications in R to Julia equivalents — jl-helpers","title":"Helpers for converting model specifications in R to Julia equivalents — jl-helpers","text":"Helpers converting model specifications R Julia equivalents","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jl-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers for converting model specifications in R to Julia equivalents — jl-helpers","text":"","code":"jl_formula(x)  jl_contrasts(df, cols = NULL, show_code = FALSE)  jl_data(df)  jl_family(family = c(\"gaussian\", \"binomial\", \"poisson\"))"},{"path":"https://yjunechoe.github.io/jlme/reference/jl-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers for converting model specifications in R to Julia equivalents — jl-helpers","text":"x string formula object df data frame cols subset columns make contrast specifiations show_code Whether print corresponding Julia code side-effect family distributional family string <family> object","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jl-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helpers for converting model specifications in R to Julia equivalents — jl-helpers","text":"","code":"jlme_setup(restart = TRUE)  # (Setup) Model data in R x <- mtcars x$cyl_helm <- factor(x$cyl) contrasts(x$cyl_helm) <- contr.helmert(3) colnames(contrasts(x$cyl_helm)) <- c(\"4vs6\", \"4&6vs8\")  # Formula conversion with julia_formula <- jl_formula(mpg ~ am * cyl_helm) julia_formula #> <Julia object of type FormulaTerm{Term, Tuple{Term, Term, InteractionTerm{Tuple{Term, Term}}}}> #> FormulaTerm #> Response: #>   mpg(unknown) #> Predictors: #>   am(unknown) #>   cyl_helm(unknown) #>   am(unknown) & cyl_helm(unknown)  # Data frame conversion julia_data <- jl_data(x) julia_data #> <Julia object of type Main.RConnector.RDataFrame> #> Main.RConnector.RDataFrame with 32 rows, 12 columns, and an unknown schema.  # Contrasts construction (`show_code = TRUE` pretty prints the Julia code) julia_contrasts <- jl_contrasts(x, show_code = TRUE) #> Dict( #>     :cyl_helm => HypothesisCoding( #>         [ #>             -1/2  1/2   0 #>             -1/6 -1/6 1/3 #>         ]; #>         levels = [\"4\", \"6\", \"8\"], #>         labels = [\"4vs6\", \"4&6vs8\"], #>     ), #> ) julia_contrasts #> <Julia object of type Dict{Symbol, HypothesisCoding{Matrix{Float64}, Matrix{Float64}}}> #> Dict{Symbol, HypothesisCoding{Matrix{Float64}, Matrix{Float64}}} with 1 entry: #>   :cyl_helm => HypothesisCoding{Matrix{Float64}, Matrix{Float64}}([-0.5 0.5 0.0…  # Family conversion julia_family <- jl_family(\"binomial\") julia_family #> <Julia object of type Bernoulli{Float64}> #> Bernoulli{Float64}(p=0.5)  stop_julia()"},{"path":"https://yjunechoe.github.io/jlme/reference/jlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a (mixed-effects) regression model in Julia — jlm","title":"Fit a (mixed-effects) regression model in Julia — jlm","text":"Fit (mixed-effects) regression model Julia","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a (mixed-effects) regression model in Julia — jlm","text":"","code":"jlm(formula, data, family = \"gaussian\", contrasts = jl_contrasts(data), ...)  jlmer(   formula,   data,   family = NULL,   contrasts = jl_contrasts(data),   ...,   progress = interactive() )"},{"path":"https://yjunechoe.github.io/jlme/reference/jlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a (mixed-effects) regression model in Julia — jlm","text":"formula formula written Julia syntax. Can string language object. data data frame family distribution family contrasts Julia dictionary contrasts Inferred data default. ... Additional arguments fit() function called Julia progress Whether print model fitting progress. Defaults interactive()","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a (mixed-effects) regression model in Julia — jlm","text":"julia model object class jlme","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a (mixed-effects) regression model in Julia — jlm","text":"","code":"jlme_setup(restart = TRUE)  # Fixed effects models lm(mpg ~ hp, mtcars) #>  #> Call: #> lm(formula = mpg ~ hp, data = mtcars) #>  #> Coefficients: #> (Intercept)           hp   #>    30.09886     -0.06823   #>  jlm(mpg ~ hp, mtcars) #> <Julia object of type StatsModels.TableRegressionModel> #>  #> mpg ~ 1 + hp #>  #> ──────────────────────────────────────────────────────────────────────────── #>                   Coef.  Std. Error      z  Pr(>|z|)   Lower 95%   Upper 95% #> ──────────────────────────────────────────────────────────────────────────── #> (Intercept)  30.0989      1.63392    18.42    <1e-75  26.8964     33.3013 #> hp           -0.0682283   0.0101193  -6.74    <1e-10  -0.0880617  -0.0483948 #> ────────────────────────────────────────────────────────────────────────────  # Auto-handling of contrasts x <- mtcars x$cyl_helm <- factor(x$cyl) contrasts(x$cyl_helm) <- contr.helmert(3) colnames(contrasts(x$cyl_helm)) <- c(\"4vs6\", \"4&6vs8\") lm(mpg ~ cyl_helm, x) #>  #> Call: #> lm(formula = mpg ~ cyl_helm, data = x) #>  #> Coefficients: #>    (Intercept)    cyl_helm4vs6  cyl_helm4&6vs8   #>         20.502          -3.460          -2.701   #>  jlm(mpg ~ cyl_helm, x) #> <Julia object of type StatsModels.TableRegressionModel> #>  #> mpg ~ 1 + cyl_helm #>  #> ───────────────────────────────────────────────────────────────────────────── #>                      Coef.  Std. Error      z  Pr(>|z|)  Lower 95%  Upper 95% #> ───────────────────────────────────────────────────────────────────────────── #> (Intercept)       20.5022     0.593528  34.54    <1e-99   19.3389    21.6655 #> cyl_helm: 4vs6    -3.46039    0.779174  -4.44    <1e-05   -4.98754   -1.93324 #> cyl_helm: 4&6vs8  -2.70108    0.387175  -6.98    <1e-11   -3.45993   -1.94223 #> ─────────────────────────────────────────────────────────────────────────────  # Mixed effects models library(lme4) #> Loading required package: Matrix  lmer(Reaction ~ Days + (Days | Subject), sleepstudy) #> Linear mixed model fit by REML ['lmerMod'] #> Formula: Reaction ~ Days + (Days | Subject) #>    Data: sleepstudy #> REML criterion at convergence: 1743.628 #> Random effects: #>  Groups   Name        Std.Dev. Corr #>  Subject  (Intercept) 24.741        #>           Days         5.922   0.07 #>  Residual             25.592        #> Number of obs: 180, groups:  Subject, 18 #> Fixed Effects: #> (Intercept)         Days   #>      251.41        10.47   jlmer(Reaction ~ Days + (Days | Subject), sleepstudy) #> Error : Evaluation in Julia failed. #> Original Julia error message: #> KeyError: key 0x00007f06758f0c80 not found #> Stacktrace: #>  [1] getindex #>    @ ./dict.jl:498 [inlined] #>  [2] decrefcount!(communicator::Main.RConnector.CommunicatoR{Sockets.TCPSocket}, ref::UInt64) #>    @ Main.RConnector ~/work/_temp/Library/JuliaConnectoR/Julia/sharing.jl:134 #>  [3] decrefcounts(communicator::Main.RConnector.CommunicatoR{Sockets.TCPSocket}, refs::Vector{UInt8}) #>    @ Main.RConnector ~/work/_temp/Library/JuliaConnectoR/Julia/sharing.jl:147 #>  [4] invokelatest(::Any, ::Any, ::Vararg{Any}; kwargs::@Kwargs{}) #>    @ Base ./essentials.jl:892 #>  [5] invokelatest(::Any, ::Any, ::Vararg{Any}) #>    @ Base ./essentials.jl:889 #>  [6] evaluate! #>    @ ~/work/_temp/Library/JuliaConnectoR/Julia/evaluating.jl:67 [inlined] #>  [7] evaluate_checked!(call::Main.RConnector.Call, communicator::Main.RConnector.CommunicatoR{Sockets.TCPSocket}) #>    @ Main.RConnector ~/work/_temp/Library/JuliaConnectoR/Julia/evaluating.jl:55 #>  [8] serve_repl(sock::Sockets.TCPSocket) #>    @ Main.RConnector ~/work/_temp/Library/JuliaConnectoR/Julia/communicating.jl:185 #>  [9] (::Main.RConnector.var\"#3#5\")() #>    @ Main.RConnector ~/work/_temp/Library/JuliaConnectoR/Julia/communicating.jl:145 #> <Julia object of type LinearMixedModel> #>  #> Reaction ~ 1 + Days + (1 + Days | Subject) #>  #> Variance components: #>             Column    Variance Std.Dev.   Corr. #> Subject  (Intercept)  565.51067 23.78047 #>          Days          32.68212  5.71683 +0.08 #> Residual              654.94145 25.59182 #> ────────────────────────────────────────────────── #>                 Coef.  Std. Error      z  Pr(>|z|) #> ────────────────────────────────────────────────── #> (Intercept)  251.405      6.63226  37.91    <1e-99 #> Days          10.4673     1.50224   6.97    <1e-11 #> ────────────────────────────────────────────────── jlmer(Reaction ~ Days + (Days | Subject), sleepstudy, REML = TRUE) #> <Julia object of type LinearMixedModel> #>  #> Reaction ~ 1 + Days + (1 + Days | Subject) #>  #> Variance components: #>             Column    Variance Std.Dev.   Corr. #> Subject  (Intercept)  612.10016 24.74066 #>          Days          35.07171  5.92214 +0.07 #> Residual              654.94001 25.59180 #> ────────────────────────────────────────────────── #>                 Coef.  Std. Error      z  Pr(>|z|) #> ────────────────────────────────────────────────── #> (Intercept)  251.405      6.8246   36.84    <1e-99 #> Days          10.4673     1.54579   6.77    <1e-10 #> ──────────────────────────────────────────────────  glmer(r2 ~ Anger + Gender + (1 | id), VerbAgg, family = \"binomial\") #> Generalized linear mixed model fit by maximum likelihood (Laplace #>   Approximation) [glmerMod] #>  Family: binomial  ( logit ) #> Formula: r2 ~ Anger + Gender + (1 | id) #>    Data: VerbAgg #>       AIC       BIC    logLik  deviance  df.resid  #>  9504.505  9532.240 -4748.253  9496.505      7580  #> Random effects: #>  Groups Name        Std.Dev. #>  id     (Intercept) 1.059    #> Number of obs: 7584, groups:  id, 316 #> Fixed Effects: #> (Intercept)        Anger      GenderM   #>    -1.10090      0.04626      0.26002   jlmer(r2 ~ Anger + Gender + (1 | id), VerbAgg, family = \"binomial\") #> <Julia object of type GeneralizedLinearMixedModel> #>  #> r2 ~ 1 + Anger + Gender + (1 | id) #>  #> Variance components: #>       Column   VarianceStd.Dev. #> id (Intercept)  1.12073 1.05865 #> ──────────────────────────────────────────────────── #>                   Coef.  Std. Error      z  Pr(>|z|) #> ──────────────────────────────────────────────────── #> (Intercept)  -1.10111     0.28068    -3.92    <1e-04 #> Anger         0.0462722   0.0134905   3.43    0.0006 #> Gender: M     0.260065    0.153847    1.69    0.0909 #> ────────────────────────────────────────────────────  stop_julia()"},{"path":"https://yjunechoe.github.io/jlme/reference/jlme-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jlme: Regression Modelling with 'GLM.jl' and 'MixedModels.jl' in 'Julia' — jlme-package","title":"jlme: Regression Modelling with 'GLM.jl' and 'MixedModels.jl' in 'Julia' — jlme-package","text":"Bindings 'Julia' packages 'GLM.jl' 'MixedModels.jl', powered 'JuliaConnectoR'. Fits (generalized) linear (mixed-effects) regression models 'Julia' using familiar model fitting syntax R. Offers 'broom'-style data frame summary functionalities 'Julia' regression models.","code":""},{"path":[]},{"path":"https://yjunechoe.github.io/jlme/reference/jlme-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jlme: Regression Modelling with 'GLM.jl' and 'MixedModels.jl' in 'Julia' — jlme-package","text":"Maintainer: June Choe jchoe001@gmail.com (ORCID)","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up Julia connection for jlme — stop_julia","title":"Set up Julia connection for jlme — stop_julia","text":"Set Julia connection jlme","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up Julia connection for jlme — stop_julia","text":"","code":"stop_julia()  jlme_status()  jlme_setup(..., restart = FALSE, threads = NULL, verbose = interactive())"},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up Julia connection for jlme — stop_julia","text":"... Unused restart Whether run stop_julia() first, attempting setup threads Number threads start Julia . Defaults 1 verbose Whether alert setup progress. Defaults interactive()","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up Julia connection for jlme — stop_julia","text":"Invisibly returns TRUE success","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up Julia connection for jlme — stop_julia","text":"","code":"if (FALSE) { # interactive() # Connect to a Julia runtime for use with `{jlme}` jlme_setup() # Show information about the Julia runtime jlme_status() # Stop Julia runtime stop_julia() }"},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidier methods for Julia regression models — jlme_tidiers","title":"Tidier methods for Julia regression models — jlme_tidiers","text":"Tidier methods Julia regression models","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidier methods for Julia regression models — jlme_tidiers","text":"","code":"# S3 method for jlme tidy(x, effects = c(\"var_model\", \"ran_pars\", \"fixed\"), ...)  # S3 method for jlme glance(x, ...)"},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidier methods for Julia regression models — jlme_tidiers","text":"x object class jlmer_mod effects One \"var_model\", \"ran_pars\", \"fixed\" ... Unused","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/jlme_tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidier methods for Julia regression models — jlme_tidiers","text":"data frame","code":""},{"path":"https://yjunechoe.github.io/jlme/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics glance, tidy","code":""}]
